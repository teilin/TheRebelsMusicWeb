{"version":3,"file":"smooth-scroll.js","sources":["smooth-scroll.js"],"sourcesContent":["/*!\n * Smooth Scroll - v1.4.13 - 2013-11-02\n * https://github.com/kswedberg/jquery-smooth-scroll\n * Copyright (c) 2013 Karl Swedberg\n * Licensed MIT (https://github.com/kswedberg/jquery-smooth-scroll/blob/master/LICENSE-MIT)\n */\n\n(function($) {\nvar version = '1.4.13',\n    optionOverrides = {},\n    defaults = {\n      exclude: [],\n      excludeWithin:[],\n      offset: 0,\n\n      // one of 'top' or 'left'\n      direction: 'top',\n\n      // jQuery set of elements you wish to scroll (for $.smoothScroll).\n      //  if null (default), $('html, body').firstScrollable() is used.\n      scrollElement: null,\n\n      // only use if you want to override default behavior\n      scrollTarget: null,\n\n      // fn(opts) function to be called before scrolling occurs.\n      // `this` is the element(s) being scrolled\n      beforeScroll: function() {},\n\n      // fn(opts) function to be called after scrolling occurs.\n      // `this` is the triggering element\n      afterScroll: function() {},\n      easing: 'swing',\n      speed: 400,\n\n      // coefficient for \"auto\" speed\n      autoCoefficent: 2,\n\n      // $.fn.smoothScroll only: whether to prevent the default click action\n      preventDefault: true\n    },\n\n    getScrollable = function(opts) {\n      var scrollable = [],\n          scrolled = false,\n          dir = opts.dir && opts.dir == 'left' ? 'scrollLeft' : 'scrollTop';\n\n      this.each(function() {\n\n        if (this == document || this == window) { return; }\n        var el = $(this);\n        if ( el[dir]() > 0 ) {\n          scrollable.push(this);\n        } else {\n          // if scroll(Top|Left) === 0, nudge the element 1px and see if it moves\n          el[dir](1);\n          scrolled = el[dir]() > 0;\n          if ( scrolled ) {\n            scrollable.push(this);\n          }\n          // then put it back, of course\n          el[dir](0);\n        }\n      });\n\n      // If no scrollable elements, fall back to <body>,\n      // if it's in the jQuery collection\n      // (doing this because Safari sets scrollTop async,\n      // so can't set it to 1 and immediately get the value.)\n      if (!scrollable.length) {\n        this.each(function(index) {\n          if (this.nodeName === 'BODY') {\n            scrollable = [this];\n          }\n        });\n      }\n\n      // Use the first scrollable element if we're calling firstScrollable()\n      if ( opts.el === 'first' && scrollable.length > 1 ) {\n        scrollable = [ scrollable[0] ];\n      }\n\n      return scrollable;\n    },\n    isTouch = 'ontouchend' in document;\n\n$.fn.extend({\n  scrollable: function(dir) {\n    var scrl = getScrollable.call(this, {dir: dir});\n    return this.pushStack(scrl);\n  },\n  firstScrollable: function(dir) {\n    var scrl = getScrollable.call(this, {el: 'first', dir: dir});\n    return this.pushStack(scrl);\n  },\n\n  smoothScroll: function(options, extra) {\n    options = options || {};\n\n    if ( options === 'options' ) {\n      if ( !extra ) {\n        return this.first().data('ssOpts');\n      }\n      return this.each(function() {\n        var $this = $(this),\n            opts = $.extend($this.data('ssOpts') || {}, extra);\n\n        $(this).data('ssOpts', opts);\n      });\n    }\n\n    var opts = $.extend({}, $.fn.smoothScroll.defaults, options),\n        locationPath = $.smoothScroll.filterPath(location.pathname);\n\n    this\n    .unbind('click.smoothscroll')\n    .bind('click.smoothscroll', function(event) {\n      var link = this,\n          $link = $(this),\n          thisOpts = $.extend({}, opts, $link.data('ssOpts') || {}),\n          exclude = opts.exclude,\n          excludeWithin = thisOpts.excludeWithin,\n          elCounter = 0, ewlCounter = 0,\n          include = true,\n          clickOpts = {},\n          hostMatch = ((location.hostname === link.hostname) || !link.hostname),\n          pathMatch = thisOpts.scrollTarget || ( $.smoothScroll.filterPath(link.pathname) || locationPath ) === locationPath,\n          thisHash = escapeSelector(link.hash);\n\n      if ( !thisOpts.scrollTarget && (!hostMatch || !pathMatch || !thisHash) ) {\n        include = false;\n      } else {\n        while (include && elCounter < exclude.length) {\n          if ($link.is(escapeSelector(exclude[elCounter++]))) {\n            include = false;\n          }\n        }\n        while ( include && ewlCounter < excludeWithin.length ) {\n          if ($link.closest(excludeWithin[ewlCounter++]).length) {\n            include = false;\n          }\n        }\n      }\n\n      if ( include ) {\n\n        if ( thisOpts.preventDefault ) {\n          event.preventDefault();\n        }\n\n        $.extend( clickOpts, thisOpts, {\n          scrollTarget: thisOpts.scrollTarget || thisHash,\n          link: link\n        });\n        $.smoothScroll( clickOpts );\n      }\n    });\n\n    return this;\n  }\n});\n\n$.smoothScroll = function(options, px) {\n  if ( options === 'options' && typeof px === 'object' ) {\n    return $.extend(optionOverrides, px);\n  }\n  var opts, $scroller, scrollTargetOffset, speed,\n      scrollerOffset = 0,\n      offPos = 'offset',\n      scrollDir = 'scrollTop',\n      aniProps = {},\n      aniOpts = {},\n      scrollprops = [];\n\n  if (typeof options === 'number') {\n    opts = $.extend({link: null}, $.fn.smoothScroll.defaults, optionOverrides);\n    scrollTargetOffset = options;\n  } else {\n    opts = $.extend({link: null}, $.fn.smoothScroll.defaults, options || {}, optionOverrides);\n    if (opts.scrollElement) {\n      offPos = 'position';\n      if (opts.scrollElement.css('position') == 'static') {\n        opts.scrollElement.css('position', 'relative');\n      }\n    }\n  }\n\n  scrollDir = opts.direction == 'left' ? 'scrollLeft' : scrollDir;\n\n  if ( opts.scrollElement ) {\n    $scroller = opts.scrollElement;\n    if ( !(/^(?:HTML|BODY)$/).test($scroller[0].nodeName) ) {\n      scrollerOffset = $scroller[scrollDir]();\n    }\n  } else {\n    $scroller = $('html, body').firstScrollable(opts.direction);\n  }\n\n  // beforeScroll callback function must fire before calculating offset\n  opts.beforeScroll.call($scroller, opts);\n\n  scrollTargetOffset = (typeof options === 'number') ? options :\n                        px ||\n                        ( $(opts.scrollTarget)[offPos]() &&\n                        $(opts.scrollTarget)[offPos]()[opts.direction] ) ||\n                        0;\n\n  aniProps[scrollDir] = scrollTargetOffset + scrollerOffset + opts.offset;\n  speed = opts.speed;\n\n  // automatically calculate the speed of the scroll based on distance / coefficient\n  if (speed === 'auto') {\n\n    // if aniProps[scrollDir] == 0 then we'll use scrollTop() value instead\n    speed = aniProps[scrollDir] || $scroller.scrollTop();\n\n    // divide the speed by the coefficient\n    speed = speed / opts.autoCoefficent;\n  }\n\n  aniOpts = {\n    duration: speed,\n    easing: opts.easing,\n    complete: function() {\n      opts.afterScroll.call(opts.link, opts);\n    }\n  };\n\n  if (opts.step) {\n    aniOpts.step = opts.step;\n  }\n\n  if ($scroller.length) {\n    $scroller.stop().animate(aniProps, aniOpts);\n  } else {\n    opts.afterScroll.call(opts.link, opts);\n  }\n};\n\n$.smoothScroll.version = version;\n$.smoothScroll.filterPath = function(string) {\n  return string\n    .replace(/^\\//,'')\n    .replace(/(?:index|default).[a-zA-Z]{3,4}$/,'')\n    .replace(/\\/$/,'');\n};\n\n// default options\n$.fn.smoothScroll.defaults = defaults;\n\nfunction escapeSelector (str) {\n  return str.replace(/(:|\\.)/g,'\\\\$1');\n}\n\n})(jQuery);\n"],"names":["$","getScrollable","opts","scrollable","dir","this","each","el","document","window","push","length","index","nodeName","optionOverrides","escapeSelector","str","replace","fn","extend","scrl","call","pushStack","firstScrollable","smoothScroll","options","extra","$this","data","first","defaults","locationPath","filterPath","location","pathname","unbind","bind","event","link","$link","thisOpts","exclude","excludeWithin","elCounter","ewlCounter","include","clickOpts","hostMatch","hostname","pathMatch","scrollTarget","thisHash","hash","is","closest","preventDefault","px","$scroller","scrollTargetOffset","scrollerOffset","offPos","scrollDir","aniProps","aniOpts","scrollElement","css","direction","test","beforeScroll","offset","speed","scrollTop","autoCoefficent","duration","easing","complete","afterScroll","step","stop","animate","version","string","jQuery"],"mappings":"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"}